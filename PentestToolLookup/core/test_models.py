from django.test import TestCase
from core.models import *

# Create your tests here.
class TagTestCase(TestCase):
    def test_tag_names(self):
        tag = Tag.objects.create(name="test_tag1")
        self.assertEqual(tag.name, "test_tag1")

class UseCaseTestCase(TestCase):
    def test_usecase(self):
        use_case = UseCase.objects.create(
            name="test_case", 
            description="This is a test use case"
        )
        self.assertEqual(use_case.name, "test_case")
        self.assertEqual(use_case.description, "This is a test use case")

class ToolAndExampleTestCase(TestCase):
    def test_tool_and_example(self):
        # Setup tags and use cases
        tag1 = Tag.objects.create(name="test_tag1")
        tag2 = Tag.objects.create(name="test_tag2")
        case1 = UseCase.objects.create(name="test_case", description="This is a test use case")
        case2 = UseCase.objects.create(name="test_case2", description="Another test use case")
        
        # Setup tool
        man_var="""
        This is a test help page
            testing
            testing
            done
        """
        installation_var = """
        <h4>Test install</h4>
        <span>apt install test</span>
        """
        description_var = "This is a test description"
        resources_var ="""
        https://nmap.org
        https://hashcat.net
        """

        tool = Tool.objects.create(
            name="test_tool", 
            tslug="test-tool",
            man=man_var,
            installation=installation_var,
            description=description_var,
            resources=resources_var,
        )

        tool.tags.set([tag1, tag2])
        tool.use_cases.set([case1, case2])

        # Setup example
        cmd="test.py <arg1> <arg2>"
        example = Example.objects.create(
            name="test_example",
            ex_slug="test-example-slug",
            use_case=case1,
            tool_name=tool,
            command=cmd,
            explanation="some explanation",
        )
        example.tags.set([tag1, tag2])

        # Test tool 
        self.assertEqual(tool.name, "test_tool")
        self.assertEqual(tool.tslug, "test-tool")
        self.assertEqual(tool.man, man_var)
        self.assertEqual(tool.installation, installation_var)
        self.assertEqual(tool.description, description_var)
        self.assertEqual(tool.resources, resources_var)
        self.assertEqual(tool.tags.count(), 2)
        self.assertEqual(tool.use_cases.count(), 2)

        # Test example
        self.assertEqual(example.name, "test_example")
        self.assertEqual(example.ex_slug, "test-example-slug")
        self.assertEqual(example.use_case.name, "test_case")
        self.assertEqual(example.tool_name.name, "test_tool")
        self.assertEqual(example.command, cmd)
        self.assertEqual(example.explanation, "some explanation")
        self.assertEqual(tool.tags.count(), 2)

